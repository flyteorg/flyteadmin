// Code generated by mockery v1.0.1. DO NOT EDIT.

package mocks

import (
	context "context"

	mock "github.com/stretchr/testify/mock"

	models "github.com/flyteorg/flyteadmin/scheduler/repositories/models"

	time "time"
)

// Executor is an autogenerated mock type for the Executor type
type Executor struct {
	mock.Mock
}

type Executor_Execute struct {
	*mock.Call
}

func (_m Executor_Execute) Return(_a0 error) *Executor_Execute {
	return &Executor_Execute{Call: _m.Call.Return(_a0)}
}

func (_m *Executor) OnExecute(ctx context.Context, scheduledTime time.Time, s models.SchedulableEntity) *Executor_Execute {
	c_call := _m.On("Execute", ctx, scheduledTime, s)
	return &Executor_Execute{Call: c_call}
}

func (_m *Executor) OnExecuteMatch(matchers ...interface{}) *Executor_Execute {
	c_call := _m.On("Execute", matchers...)
	return &Executor_Execute{Call: c_call}
}

// Execute provides a mock function with given fields: ctx, scheduledTime, s
func (_m *Executor) Execute(ctx context.Context, scheduledTime time.Time, s models.SchedulableEntity) error {
	ret := _m.Called(ctx, scheduledTime, s)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, time.Time, models.SchedulableEntity) error); ok {
		r0 = rf(ctx, scheduledTime, s)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}
