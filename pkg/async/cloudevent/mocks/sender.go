// Code generated by mockery v1.0.1. DO NOT EDIT.

package mocks

import (
	context "context"

	event "github.com/cloudevents/sdk-go/v2/event"

	mock "github.com/stretchr/testify/mock"
)

// Sender is an autogenerated mock type for the Sender type
type Sender struct {
	mock.Mock
}

type Sender_Send struct {
	*mock.Call
}

func (_m Sender_Send) Return(_a0 error) *Sender_Send {
	return &Sender_Send{Call: _m.Call.Return(_a0)}
}

func (_m *Sender) OnSend(ctx context.Context, notificationType string, _a2 event.Event) *Sender_Send {
	c_call := _m.On("Send", ctx, notificationType, _a2)
	return &Sender_Send{Call: c_call}
}

func (_m *Sender) OnSendMatch(matchers ...interface{}) *Sender_Send {
	c_call := _m.On("Send", matchers...)
	return &Sender_Send{Call: c_call}
}

// Send provides a mock function with given fields: ctx, notificationType, _a2
func (_m *Sender) Send(ctx context.Context, notificationType string, _a2 event.Event) error {
	ret := _m.Called(ctx, notificationType, _a2)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, string, event.Event) error); ok {
		r0 = rf(ctx, notificationType, _a2)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}
