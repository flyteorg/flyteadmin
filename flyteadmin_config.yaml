# This is a sample configuration file.
# Real configuration when running inside K8s (local or otherwise) lives in a ConfigMap
# Look in the artifacts directory in the flyte repo for what's actually run
# https://github.com/lyft/flyte/blob/b47565c9998cde32b0b5f995981e3f3c990fa7cd/artifacts/flyteadmin.yaml#L72
server:
  httpPort: 8088
  grpcPort: 8089
  grpcServerReflection: true
  kube-config: /Users/haythamabuelfutuh/kubeconfig/k3s/k3s.yaml
  security:
    secure: false
    useAuth: true
    allowCors: true
    allowedOrigins:
      # Accepting all domains for Sandbox installation
      - "*"
    allowedHeaders:
      - "Content-Type"
secrets:
  secrets-prefix: "/Users/sonjae/flyteadmin"
# Okta OIdC only
auth:
  appAuth:
    selfAuthServer:
      claimSymmetricEncryptionKeySecretName: "claim_symmetric_key"
      tokenSigningRSAKeySecretName: "token_rsa_key.pem"
      staticClients:
        - obol:
            id: obol
            # The secret is hashed, so we can store it in ghe
            client_secret: JDJiJDA2JFpVaS5Iby5KVzV3dHl1L3o1UDkvOU9IZ0VjbUh6LnEwVHVVaGxjTWlRNVdld0VneU9STHZh
            scopes: all
            grant_types: client_credentials
        - spotify-flytepropeller:
            id: spotify-flytepropeller
            # The secret is hashed, so we can store it in ghe
            client_secret: JDJiJDA2JE5HQW9xLk9PNFVxaElhckhlV1JtNC5OUG9OUHFHb0tqcGNpVnJHamx4STRVM3lLUlpIWGx5
            scopes: all
            grant_types: client_credentials
  #appAuth:
  #  authServerType: External
  #  externalAuthServer:
  #    metadataUrl: .well-known/openid-configuration
  #    allowedAudience: https://flyte.net
  authorizedUris:
    # This should point at your public http Uri.
    - http://localhost:8088
  userAuth:
    openId:
      # Put the URL of the OpenID Connect provider.
      baseUrl: "https://accounts.google.com"
      #scopes:
      #  - profile
      #  - openid
      # Replace with the client id created for Flyte.
      #clientId: "418828950929-etkqnjo8sdcn501eo6o8oik0iupvimgt.apps.googleusercontent.com"
      cookieHashKeySecretName: "cookie_hash_key"
      cookieBlockKeySecretName: "cookie_block_key"
      clientSecretName: "oidc_client_secret"



# Okta OIdC and OAuth2
#auth:
#  authorizedUris:
#    - https://localhost:8088
#    - http://flyteadmin:80
#  appAuth:
#    authServerType: External
#  userAuth:
#    openId:
#      # Put the URL of the OpenID Connect provider.
#      baseUrl: https://dev-14186422.okta.com/oauth2/auskngnn7uBViQq6b5d6
#      scopes:
#        - profile
#        - openid
#        - offline_access # Uncomment if OIdC supports issuing refresh tokens.
#      # Replace with the client id created for Flyte.
#      clientId: 0oakkheteNjCMERst5d6
flyteadmin:
  runScheduler: false
  roleNameKey: "iam.amazonaws.com/role"
  metricsScope: "flyte:"
  profilerPort: 10254
  testing:
    host: "http://localhost:8088"
  # This last must be in order! For example, a file path would be prefixed with metadata/admin/...
  metadataStoragePrefix:
    - "metadata"
    - "admin"
database:
  port: 5432
  username: postgres
  host: localhost
  dbname: postgres
  options: "sslmode=disable"
scheduler:
  eventScheduler:
    scheme: local
    region: "my-region"
    scheduleRole: "arn:aws:iam::abc123:role/my-iam-role"
    targetName: "arn:aws:sqs:my-region:abc123:my-queue"
    scheduleNamePrefix: "flyte"
  workflowExecutor:
    scheme: local
    region: "my-region"
    scheduleQueueName: "won't-work-locally"
    accountId: "abc123"
remoteData:
  region: "my-region"
  scheme: local
  signedUrls:
    durationMinutes: 3
notifications:
  type: local
  region: "my-region"
  publisher:
    topicName: "foo"
  processor:
    queueName: "queue"
    accountId: "bar"
  emailer:
    subject: "Notice: Execution \"{{ name }}\" has {{ phase }} in \"{{ domain }}\"."
    sender: "flyte-notifications@example.com"
    body: >
      Execution \"{{ name }}\" has {{ phase }} in \"{{ domain }}\". View details at
      <a href=\http://example.com/projects/{{ project }}/domains/{{ domain }}/executions/{{ name }}>
      http://example.com/projects/{{ project }}/domains/{{ domain }}/executions/{{ name }}</a>. {{ error }}
externalEvents:
  Enable: false
  type: gcp
  gcp:
    projectId: "foo"
  eventsPublisher:
    topicName: "bar"
    eventTypes: all
Logger:
  show-source: true
  level: 6
storage:
  type: minio
  connection:
    access-key: minio
    auth-type: accesskey
    secret-key: miniostorage
    disable-ssl: true
    endpoint: "http://localhost:9000"
    region: my-region
  cache:
    max_size_mbs: 10
    target_gc_percent: 100
  container: "flyte"
queues:
  executionQueues:
    - dynamic: "gpu_dynamic"
      attributes:
        - gpu
    - dynamic: "critical"
      attributes:
        - critical
    - dynamic: "default"
      attributes:
        - defaultclusters
  workflowConfigs:
    - project: "my_queue_1"
      domain: "production"
      workflowName: "my_workflow_1"
      tags:
        - critical
    - project: "production"
      workflowName: "my_workflow_2"
      tags:
        - gpu
    - project: "my_queue_3"
      domain: "production"
      workflowName: "my_workflow_3"
      tags:
        - critical
    - tags:
        - default
task_resources:
  defaults:
    cpu: 100m
    gpu: 20m
    memory: 1Mi
    storage: 10M
  limits:
    cpu: 500m
    gpu: 100m
    memory: 1Mi
    storage: 10G
task_type_whitelist:
  sparkonk8s:
    - project: my_queue_1
      domain: production
    - project: my_queue_2
      domain: production
  qubolespark:
    - project: my_queue_2
domains:
  - id: development
    name: development
  - id: staging
    name: staging
  - id: production
    name: production
  - id: domain
    name: domain
cluster_resources:
  templatePath: pkg/clusterresource/sampletemplates
  templateData:
    foo:
      value: "bar"
    foofoo:
      valueFrom:
        env: SHELL
  refresh: 3s
qualityOfService:
  tierExecutionValues:
    LOW:
      queueingBudget: 30m
    MEDIUM:
      queueingBudget: 10m
    HIGH:
      queueingBudget: 1m
    # By default UNDEFINED has no queueing budget when it is omitted from the configuration
  defaultTiers:
    development: LOW
    staging: MEDIUM
    # by default production has an UNDEFINED tier when it is omitted from the configuration
