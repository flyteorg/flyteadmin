// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        (unknown)
// source: flyteidl/plugins/sagemaker/hyperparameter_tuning_job.proto

package plugins

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type HyperparameterTuningObjectiveType_Value int32

const (
	HyperparameterTuningObjectiveType_MINIMIZE HyperparameterTuningObjectiveType_Value = 0
	HyperparameterTuningObjectiveType_MAXIMIZE HyperparameterTuningObjectiveType_Value = 1
)

// Enum value maps for HyperparameterTuningObjectiveType_Value.
var (
	HyperparameterTuningObjectiveType_Value_name = map[int32]string{
		0: "MINIMIZE",
		1: "MAXIMIZE",
	}
	HyperparameterTuningObjectiveType_Value_value = map[string]int32{
		"MINIMIZE": 0,
		"MAXIMIZE": 1,
	}
)

func (x HyperparameterTuningObjectiveType_Value) Enum() *HyperparameterTuningObjectiveType_Value {
	p := new(HyperparameterTuningObjectiveType_Value)
	*p = x
	return p
}

func (x HyperparameterTuningObjectiveType_Value) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (HyperparameterTuningObjectiveType_Value) Descriptor() protoreflect.EnumDescriptor {
	return file_flyteidl_plugins_sagemaker_hyperparameter_tuning_job_proto_enumTypes[0].Descriptor()
}

func (HyperparameterTuningObjectiveType_Value) Type() protoreflect.EnumType {
	return &file_flyteidl_plugins_sagemaker_hyperparameter_tuning_job_proto_enumTypes[0]
}

func (x HyperparameterTuningObjectiveType_Value) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use HyperparameterTuningObjectiveType_Value.Descriptor instead.
func (HyperparameterTuningObjectiveType_Value) EnumDescriptor() ([]byte, []int) {
	return file_flyteidl_plugins_sagemaker_hyperparameter_tuning_job_proto_rawDescGZIP(), []int{1, 0}
}

type HyperparameterTuningStrategy_Value int32

const (
	HyperparameterTuningStrategy_BAYESIAN HyperparameterTuningStrategy_Value = 0
	HyperparameterTuningStrategy_RANDOM   HyperparameterTuningStrategy_Value = 1
)

// Enum value maps for HyperparameterTuningStrategy_Value.
var (
	HyperparameterTuningStrategy_Value_name = map[int32]string{
		0: "BAYESIAN",
		1: "RANDOM",
	}
	HyperparameterTuningStrategy_Value_value = map[string]int32{
		"BAYESIAN": 0,
		"RANDOM":   1,
	}
)

func (x HyperparameterTuningStrategy_Value) Enum() *HyperparameterTuningStrategy_Value {
	p := new(HyperparameterTuningStrategy_Value)
	*p = x
	return p
}

func (x HyperparameterTuningStrategy_Value) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (HyperparameterTuningStrategy_Value) Descriptor() protoreflect.EnumDescriptor {
	return file_flyteidl_plugins_sagemaker_hyperparameter_tuning_job_proto_enumTypes[1].Descriptor()
}

func (HyperparameterTuningStrategy_Value) Type() protoreflect.EnumType {
	return &file_flyteidl_plugins_sagemaker_hyperparameter_tuning_job_proto_enumTypes[1]
}

func (x HyperparameterTuningStrategy_Value) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use HyperparameterTuningStrategy_Value.Descriptor instead.
func (HyperparameterTuningStrategy_Value) EnumDescriptor() ([]byte, []int) {
	return file_flyteidl_plugins_sagemaker_hyperparameter_tuning_job_proto_rawDescGZIP(), []int{3, 0}
}

type TrainingJobEarlyStoppingType_Value int32

const (
	TrainingJobEarlyStoppingType_OFF  TrainingJobEarlyStoppingType_Value = 0
	TrainingJobEarlyStoppingType_AUTO TrainingJobEarlyStoppingType_Value = 1
)

// Enum value maps for TrainingJobEarlyStoppingType_Value.
var (
	TrainingJobEarlyStoppingType_Value_name = map[int32]string{
		0: "OFF",
		1: "AUTO",
	}
	TrainingJobEarlyStoppingType_Value_value = map[string]int32{
		"OFF":  0,
		"AUTO": 1,
	}
)

func (x TrainingJobEarlyStoppingType_Value) Enum() *TrainingJobEarlyStoppingType_Value {
	p := new(TrainingJobEarlyStoppingType_Value)
	*p = x
	return p
}

func (x TrainingJobEarlyStoppingType_Value) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TrainingJobEarlyStoppingType_Value) Descriptor() protoreflect.EnumDescriptor {
	return file_flyteidl_plugins_sagemaker_hyperparameter_tuning_job_proto_enumTypes[2].Descriptor()
}

func (TrainingJobEarlyStoppingType_Value) Type() protoreflect.EnumType {
	return &file_flyteidl_plugins_sagemaker_hyperparameter_tuning_job_proto_enumTypes[2]
}

func (x TrainingJobEarlyStoppingType_Value) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TrainingJobEarlyStoppingType_Value.Descriptor instead.
func (TrainingJobEarlyStoppingType_Value) EnumDescriptor() ([]byte, []int) {
	return file_flyteidl_plugins_sagemaker_hyperparameter_tuning_job_proto_rawDescGZIP(), []int{4, 0}
}

// A pass-through for SageMaker's hyperparameter tuning job
type HyperparameterTuningJob struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The underlying training job that the hyperparameter tuning job will launch during the process
	TrainingJob *TrainingJob `protobuf:"bytes,1,opt,name=training_job,json=trainingJob,proto3" json:"training_job,omitempty"`
	// The maximum number of training jobs that an hpo job can launch. For resource limit purpose.
	// https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_ResourceLimits.html
	MaxNumberOfTrainingJobs int64 `protobuf:"varint,2,opt,name=max_number_of_training_jobs,json=maxNumberOfTrainingJobs,proto3" json:"max_number_of_training_jobs,omitempty"`
	// The maximum number of concurrent training job that an hpo job can launch
	// https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_ResourceLimits.html
	MaxParallelTrainingJobs int64 `protobuf:"varint,3,opt,name=max_parallel_training_jobs,json=maxParallelTrainingJobs,proto3" json:"max_parallel_training_jobs,omitempty"`
}

func (x *HyperparameterTuningJob) Reset() {
	*x = HyperparameterTuningJob{}
	if protoimpl.UnsafeEnabled {
		mi := &file_flyteidl_plugins_sagemaker_hyperparameter_tuning_job_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HyperparameterTuningJob) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HyperparameterTuningJob) ProtoMessage() {}

func (x *HyperparameterTuningJob) ProtoReflect() protoreflect.Message {
	mi := &file_flyteidl_plugins_sagemaker_hyperparameter_tuning_job_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HyperparameterTuningJob.ProtoReflect.Descriptor instead.
func (*HyperparameterTuningJob) Descriptor() ([]byte, []int) {
	return file_flyteidl_plugins_sagemaker_hyperparameter_tuning_job_proto_rawDescGZIP(), []int{0}
}

func (x *HyperparameterTuningJob) GetTrainingJob() *TrainingJob {
	if x != nil {
		return x.TrainingJob
	}
	return nil
}

func (x *HyperparameterTuningJob) GetMaxNumberOfTrainingJobs() int64 {
	if x != nil {
		return x.MaxNumberOfTrainingJobs
	}
	return 0
}

func (x *HyperparameterTuningJob) GetMaxParallelTrainingJobs() int64 {
	if x != nil {
		return x.MaxParallelTrainingJobs
	}
	return 0
}

// HyperparameterTuningObjectiveType determines the direction of the tuning of the Hyperparameter Tuning Job
// with respect to the specified metric.
type HyperparameterTuningObjectiveType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *HyperparameterTuningObjectiveType) Reset() {
	*x = HyperparameterTuningObjectiveType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_flyteidl_plugins_sagemaker_hyperparameter_tuning_job_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HyperparameterTuningObjectiveType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HyperparameterTuningObjectiveType) ProtoMessage() {}

func (x *HyperparameterTuningObjectiveType) ProtoReflect() protoreflect.Message {
	mi := &file_flyteidl_plugins_sagemaker_hyperparameter_tuning_job_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HyperparameterTuningObjectiveType.ProtoReflect.Descriptor instead.
func (*HyperparameterTuningObjectiveType) Descriptor() ([]byte, []int) {
	return file_flyteidl_plugins_sagemaker_hyperparameter_tuning_job_proto_rawDescGZIP(), []int{1}
}

// The target metric and the objective of the hyperparameter tuning.
// https://docs.aws.amazon.com/sagemaker/latest/dg/automatic-model-tuning-define-metrics.html
type HyperparameterTuningObjective struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// HyperparameterTuningObjectiveType determines the direction of the tuning of the Hyperparameter Tuning Job
	// with respect to the specified metric.
	ObjectiveType HyperparameterTuningObjectiveType_Value `protobuf:"varint,1,opt,name=objective_type,json=objectiveType,proto3,enum=flyteidl.plugins.sagemaker.HyperparameterTuningObjectiveType_Value" json:"objective_type,omitempty"`
	// The target metric name, which is the user-defined name of the metric specified in the
	// training job's algorithm specification
	MetricName string `protobuf:"bytes,2,opt,name=metric_name,json=metricName,proto3" json:"metric_name,omitempty"`
}

func (x *HyperparameterTuningObjective) Reset() {
	*x = HyperparameterTuningObjective{}
	if protoimpl.UnsafeEnabled {
		mi := &file_flyteidl_plugins_sagemaker_hyperparameter_tuning_job_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HyperparameterTuningObjective) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HyperparameterTuningObjective) ProtoMessage() {}

func (x *HyperparameterTuningObjective) ProtoReflect() protoreflect.Message {
	mi := &file_flyteidl_plugins_sagemaker_hyperparameter_tuning_job_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HyperparameterTuningObjective.ProtoReflect.Descriptor instead.
func (*HyperparameterTuningObjective) Descriptor() ([]byte, []int) {
	return file_flyteidl_plugins_sagemaker_hyperparameter_tuning_job_proto_rawDescGZIP(), []int{2}
}

func (x *HyperparameterTuningObjective) GetObjectiveType() HyperparameterTuningObjectiveType_Value {
	if x != nil {
		return x.ObjectiveType
	}
	return HyperparameterTuningObjectiveType_MINIMIZE
}

func (x *HyperparameterTuningObjective) GetMetricName() string {
	if x != nil {
		return x.MetricName
	}
	return ""
}

// Setting the strategy used when searching in the hyperparameter space
// Refer this doc for more details:
// https://aws.amazon.com/blogs/machine-learning/amazon-sagemaker-automatic-model-tuning-now-supports-random-search-and-hyperparameter-scaling/
type HyperparameterTuningStrategy struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *HyperparameterTuningStrategy) Reset() {
	*x = HyperparameterTuningStrategy{}
	if protoimpl.UnsafeEnabled {
		mi := &file_flyteidl_plugins_sagemaker_hyperparameter_tuning_job_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HyperparameterTuningStrategy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HyperparameterTuningStrategy) ProtoMessage() {}

func (x *HyperparameterTuningStrategy) ProtoReflect() protoreflect.Message {
	mi := &file_flyteidl_plugins_sagemaker_hyperparameter_tuning_job_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HyperparameterTuningStrategy.ProtoReflect.Descriptor instead.
func (*HyperparameterTuningStrategy) Descriptor() ([]byte, []int) {
	return file_flyteidl_plugins_sagemaker_hyperparameter_tuning_job_proto_rawDescGZIP(), []int{3}
}

// When the training jobs launched by the hyperparameter tuning job are not improving significantly,
// a hyperparameter tuning job can be stopping early.
// Note that there's only a subset of built-in algorithms that supports early stopping.
// see: https://docs.aws.amazon.com/sagemaker/latest/dg/automatic-model-tuning-early-stopping.html
type TrainingJobEarlyStoppingType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *TrainingJobEarlyStoppingType) Reset() {
	*x = TrainingJobEarlyStoppingType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_flyteidl_plugins_sagemaker_hyperparameter_tuning_job_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TrainingJobEarlyStoppingType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TrainingJobEarlyStoppingType) ProtoMessage() {}

func (x *TrainingJobEarlyStoppingType) ProtoReflect() protoreflect.Message {
	mi := &file_flyteidl_plugins_sagemaker_hyperparameter_tuning_job_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TrainingJobEarlyStoppingType.ProtoReflect.Descriptor instead.
func (*TrainingJobEarlyStoppingType) Descriptor() ([]byte, []int) {
	return file_flyteidl_plugins_sagemaker_hyperparameter_tuning_job_proto_rawDescGZIP(), []int{4}
}

// The specification of the hyperparameter tuning process
// https://docs.aws.amazon.com/sagemaker/latest/dg/automatic-model-tuning-ex-tuning-job.html#automatic-model-tuning-ex-low-tuning-config
type HyperparameterTuningJobConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// ParameterRanges is a map that maps hyperparameter name to the corresponding hyperparameter range
	HyperparameterRanges *ParameterRanges `protobuf:"bytes,1,opt,name=hyperparameter_ranges,json=hyperparameterRanges,proto3" json:"hyperparameter_ranges,omitempty"`
	// Setting the strategy used when searching in the hyperparameter space
	TuningStrategy HyperparameterTuningStrategy_Value `protobuf:"varint,2,opt,name=tuning_strategy,json=tuningStrategy,proto3,enum=flyteidl.plugins.sagemaker.HyperparameterTuningStrategy_Value" json:"tuning_strategy,omitempty"`
	// The target metric and the objective of the hyperparameter tuning.
	TuningObjective *HyperparameterTuningObjective `protobuf:"bytes,3,opt,name=tuning_objective,json=tuningObjective,proto3" json:"tuning_objective,omitempty"`
	// When the training jobs launched by the hyperparameter tuning job are not improving significantly,
	// a hyperparameter tuning job can be stopping early.
	TrainingJobEarlyStoppingType TrainingJobEarlyStoppingType_Value `protobuf:"varint,4,opt,name=training_job_early_stopping_type,json=trainingJobEarlyStoppingType,proto3,enum=flyteidl.plugins.sagemaker.TrainingJobEarlyStoppingType_Value" json:"training_job_early_stopping_type,omitempty"`
}

func (x *HyperparameterTuningJobConfig) Reset() {
	*x = HyperparameterTuningJobConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_flyteidl_plugins_sagemaker_hyperparameter_tuning_job_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HyperparameterTuningJobConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HyperparameterTuningJobConfig) ProtoMessage() {}

func (x *HyperparameterTuningJobConfig) ProtoReflect() protoreflect.Message {
	mi := &file_flyteidl_plugins_sagemaker_hyperparameter_tuning_job_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HyperparameterTuningJobConfig.ProtoReflect.Descriptor instead.
func (*HyperparameterTuningJobConfig) Descriptor() ([]byte, []int) {
	return file_flyteidl_plugins_sagemaker_hyperparameter_tuning_job_proto_rawDescGZIP(), []int{5}
}

func (x *HyperparameterTuningJobConfig) GetHyperparameterRanges() *ParameterRanges {
	if x != nil {
		return x.HyperparameterRanges
	}
	return nil
}

func (x *HyperparameterTuningJobConfig) GetTuningStrategy() HyperparameterTuningStrategy_Value {
	if x != nil {
		return x.TuningStrategy
	}
	return HyperparameterTuningStrategy_BAYESIAN
}

func (x *HyperparameterTuningJobConfig) GetTuningObjective() *HyperparameterTuningObjective {
	if x != nil {
		return x.TuningObjective
	}
	return nil
}

func (x *HyperparameterTuningJobConfig) GetTrainingJobEarlyStoppingType() TrainingJobEarlyStoppingType_Value {
	if x != nil {
		return x.TrainingJobEarlyStoppingType
	}
	return TrainingJobEarlyStoppingType_OFF
}

var File_flyteidl_plugins_sagemaker_hyperparameter_tuning_job_proto protoreflect.FileDescriptor

var file_flyteidl_plugins_sagemaker_hyperparameter_tuning_job_proto_rawDesc = []byte{
	0x0a, 0x3a, 0x66, 0x6c, 0x79, 0x74, 0x65, 0x69, 0x64, 0x6c, 0x2f, 0x70, 0x6c, 0x75, 0x67, 0x69,
	0x6e, 0x73, 0x2f, 0x73, 0x61, 0x67, 0x65, 0x6d, 0x61, 0x6b, 0x65, 0x72, 0x2f, 0x68, 0x79, 0x70,
	0x65, 0x72, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x5f, 0x74, 0x75, 0x6e, 0x69,
	0x6e, 0x67, 0x5f, 0x6a, 0x6f, 0x62, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x1a, 0x66, 0x6c,
	0x79, 0x74, 0x65, 0x69, 0x64, 0x6c, 0x2e, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x73, 0x2e, 0x73,
	0x61, 0x67, 0x65, 0x6d, 0x61, 0x6b, 0x65, 0x72, 0x1a, 0x31, 0x66, 0x6c, 0x79, 0x74, 0x65, 0x69,
	0x64, 0x6c, 0x2f, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x73, 0x2f, 0x73, 0x61, 0x67, 0x65, 0x6d,
	0x61, 0x6b, 0x65, 0x72, 0x2f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x5f, 0x72,
	0x61, 0x6e, 0x67, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2d, 0x66, 0x6c, 0x79,
	0x74, 0x65, 0x69, 0x64, 0x6c, 0x2f, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x73, 0x2f, 0x73, 0x61,
	0x67, 0x65, 0x6d, 0x61, 0x6b, 0x65, 0x72, 0x2f, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67,
	0x5f, 0x6a, 0x6f, 0x62, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xe0, 0x01, 0x0a, 0x17, 0x48,
	0x79, 0x70, 0x65, 0x72, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x54, 0x75, 0x6e,
	0x69, 0x6e, 0x67, 0x4a, 0x6f, 0x62, 0x12, 0x4a, 0x0a, 0x0c, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x69,
	0x6e, 0x67, 0x5f, 0x6a, 0x6f, 0x62, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x66,
	0x6c, 0x79, 0x74, 0x65, 0x69, 0x64, 0x6c, 0x2e, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x73, 0x2e,
	0x73, 0x61, 0x67, 0x65, 0x6d, 0x61, 0x6b, 0x65, 0x72, 0x2e, 0x54, 0x72, 0x61, 0x69, 0x6e, 0x69,
	0x6e, 0x67, 0x4a, 0x6f, 0x62, 0x52, 0x0b, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x4a,
	0x6f, 0x62, 0x12, 0x3c, 0x0a, 0x1b, 0x6d, 0x61, 0x78, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x5f, 0x6f, 0x66, 0x5f, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x6a, 0x6f, 0x62,
	0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x17, 0x6d, 0x61, 0x78, 0x4e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x4f, 0x66, 0x54, 0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x4a, 0x6f, 0x62, 0x73,
	0x12, 0x3b, 0x0a, 0x1a, 0x6d, 0x61, 0x78, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6c, 0x6c, 0x65, 0x6c,
	0x5f, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x6a, 0x6f, 0x62, 0x73, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x17, 0x6d, 0x61, 0x78, 0x50, 0x61, 0x72, 0x61, 0x6c, 0x6c, 0x65,
	0x6c, 0x54, 0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x4a, 0x6f, 0x62, 0x73, 0x22, 0x48, 0x0a,
	0x21, 0x48, 0x79, 0x70, 0x65, 0x72, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x54,
	0x75, 0x6e, 0x69, 0x6e, 0x67, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x54, 0x79,
	0x70, 0x65, 0x22, 0x23, 0x0a, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x0c, 0x0a, 0x08, 0x4d,
	0x49, 0x4e, 0x49, 0x4d, 0x49, 0x5a, 0x45, 0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08, 0x4d, 0x41, 0x58,
	0x49, 0x4d, 0x49, 0x5a, 0x45, 0x10, 0x01, 0x22, 0xac, 0x01, 0x0a, 0x1d, 0x48, 0x79, 0x70, 0x65,
	0x72, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x54, 0x75, 0x6e, 0x69, 0x6e, 0x67,
	0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x12, 0x6a, 0x0a, 0x0e, 0x6f, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x43, 0x2e, 0x66, 0x6c, 0x79, 0x74, 0x65, 0x69, 0x64, 0x6c, 0x2e, 0x70, 0x6c, 0x75,
	0x67, 0x69, 0x6e, 0x73, 0x2e, 0x73, 0x61, 0x67, 0x65, 0x6d, 0x61, 0x6b, 0x65, 0x72, 0x2e, 0x48,
	0x79, 0x70, 0x65, 0x72, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x54, 0x75, 0x6e,
	0x69, 0x6e, 0x67, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0d, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x69, 0x76,
	0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6d, 0x65, 0x74, 0x72,
	0x69, 0x63, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x41, 0x0a, 0x1c, 0x48, 0x79, 0x70, 0x65, 0x72, 0x70,
	0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x54, 0x75, 0x6e, 0x69, 0x6e, 0x67, 0x53, 0x74,
	0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x22, 0x21, 0x0a, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12,
	0x0c, 0x0a, 0x08, 0x42, 0x41, 0x59, 0x45, 0x53, 0x49, 0x41, 0x4e, 0x10, 0x00, 0x12, 0x0a, 0x0a,
	0x06, 0x52, 0x41, 0x4e, 0x44, 0x4f, 0x4d, 0x10, 0x01, 0x22, 0x3a, 0x0a, 0x1c, 0x54, 0x72, 0x61,
	0x69, 0x6e, 0x69, 0x6e, 0x67, 0x4a, 0x6f, 0x62, 0x45, 0x61, 0x72, 0x6c, 0x79, 0x53, 0x74, 0x6f,
	0x70, 0x70, 0x69, 0x6e, 0x67, 0x54, 0x79, 0x70, 0x65, 0x22, 0x1a, 0x0a, 0x05, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x12, 0x07, 0x0a, 0x03, 0x4f, 0x46, 0x46, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x41,
	0x55, 0x54, 0x4f, 0x10, 0x01, 0x22, 0xd9, 0x03, 0x0a, 0x1d, 0x48, 0x79, 0x70, 0x65, 0x72, 0x70,
	0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x54, 0x75, 0x6e, 0x69, 0x6e, 0x67, 0x4a, 0x6f,
	0x62, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x60, 0x0a, 0x15, 0x68, 0x79, 0x70, 0x65, 0x72,
	0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x5f, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x66, 0x6c, 0x79, 0x74, 0x65, 0x69, 0x64,
	0x6c, 0x2e, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x73, 0x2e, 0x73, 0x61, 0x67, 0x65, 0x6d, 0x61,
	0x6b, 0x65, 0x72, 0x2e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x52, 0x61, 0x6e,
	0x67, 0x65, 0x73, 0x52, 0x14, 0x68, 0x79, 0x70, 0x65, 0x72, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65,
	0x74, 0x65, 0x72, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x12, 0x67, 0x0a, 0x0f, 0x74, 0x75, 0x6e,
	0x69, 0x6e, 0x67, 0x5f, 0x73, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x3e, 0x2e, 0x66, 0x6c, 0x79, 0x74, 0x65, 0x69, 0x64, 0x6c, 0x2e, 0x70, 0x6c,
	0x75, 0x67, 0x69, 0x6e, 0x73, 0x2e, 0x73, 0x61, 0x67, 0x65, 0x6d, 0x61, 0x6b, 0x65, 0x72, 0x2e,
	0x48, 0x79, 0x70, 0x65, 0x72, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x54, 0x75,
	0x6e, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x2e, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x52, 0x0e, 0x74, 0x75, 0x6e, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x72, 0x61, 0x74, 0x65,
	0x67, 0x79, 0x12, 0x64, 0x0a, 0x10, 0x74, 0x75, 0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x6f, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x39, 0x2e, 0x66,
	0x6c, 0x79, 0x74, 0x65, 0x69, 0x64, 0x6c, 0x2e, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x73, 0x2e,
	0x73, 0x61, 0x67, 0x65, 0x6d, 0x61, 0x6b, 0x65, 0x72, 0x2e, 0x48, 0x79, 0x70, 0x65, 0x72, 0x70,
	0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x54, 0x75, 0x6e, 0x69, 0x6e, 0x67, 0x4f, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x52, 0x0f, 0x74, 0x75, 0x6e, 0x69, 0x6e, 0x67, 0x4f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x12, 0x86, 0x01, 0x0a, 0x20, 0x74, 0x72, 0x61,
	0x69, 0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x6a, 0x6f, 0x62, 0x5f, 0x65, 0x61, 0x72, 0x6c, 0x79, 0x5f,
	0x73, 0x74, 0x6f, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x3e, 0x2e, 0x66, 0x6c, 0x79, 0x74, 0x65, 0x69, 0x64, 0x6c, 0x2e, 0x70,
	0x6c, 0x75, 0x67, 0x69, 0x6e, 0x73, 0x2e, 0x73, 0x61, 0x67, 0x65, 0x6d, 0x61, 0x6b, 0x65, 0x72,
	0x2e, 0x54, 0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x4a, 0x6f, 0x62, 0x45, 0x61, 0x72, 0x6c,
	0x79, 0x53, 0x74, 0x6f, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x54, 0x79, 0x70, 0x65, 0x2e, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x52, 0x1c, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x4a, 0x6f, 0x62,
	0x45, 0x61, 0x72, 0x6c, 0x79, 0x53, 0x74, 0x6f, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x54, 0x79, 0x70,
	0x65, 0x42, 0x81, 0x02, 0x0a, 0x1e, 0x63, 0x6f, 0x6d, 0x2e, 0x66, 0x6c, 0x79, 0x74, 0x65, 0x69,
	0x64, 0x6c, 0x2e, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x73, 0x2e, 0x73, 0x61, 0x67, 0x65, 0x6d,
	0x61, 0x6b, 0x65, 0x72, 0x42, 0x1c, 0x48, 0x79, 0x70, 0x65, 0x72, 0x70, 0x61, 0x72, 0x61, 0x6d,
	0x65, 0x74, 0x65, 0x72, 0x54, 0x75, 0x6e, 0x69, 0x6e, 0x67, 0x4a, 0x6f, 0x62, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x50, 0x01, 0x5a, 0x37, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2f, 0x66, 0x6c, 0x79, 0x74, 0x65, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x6c, 0x79, 0x74, 0x65, 0x69,
	0x64, 0x6c, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x70, 0x62, 0x2d, 0x67, 0x6f, 0x2f, 0x66, 0x6c, 0x79,
	0x74, 0x65, 0x69, 0x64, 0x6c, 0x2f, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x73, 0xa2, 0x02, 0x03,
	0x46, 0x50, 0x53, 0xaa, 0x02, 0x1a, 0x46, 0x6c, 0x79, 0x74, 0x65, 0x69, 0x64, 0x6c, 0x2e, 0x50,
	0x6c, 0x75, 0x67, 0x69, 0x6e, 0x73, 0x2e, 0x53, 0x61, 0x67, 0x65, 0x6d, 0x61, 0x6b, 0x65, 0x72,
	0xca, 0x02, 0x1a, 0x46, 0x6c, 0x79, 0x74, 0x65, 0x69, 0x64, 0x6c, 0x5c, 0x50, 0x6c, 0x75, 0x67,
	0x69, 0x6e, 0x73, 0x5c, 0x53, 0x61, 0x67, 0x65, 0x6d, 0x61, 0x6b, 0x65, 0x72, 0xe2, 0x02, 0x26,
	0x46, 0x6c, 0x79, 0x74, 0x65, 0x69, 0x64, 0x6c, 0x5c, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x73,
	0x5c, 0x53, 0x61, 0x67, 0x65, 0x6d, 0x61, 0x6b, 0x65, 0x72, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x1c, 0x46, 0x6c, 0x79, 0x74, 0x65, 0x69, 0x64,
	0x6c, 0x3a, 0x3a, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x73, 0x3a, 0x3a, 0x53, 0x61, 0x67, 0x65,
	0x6d, 0x61, 0x6b, 0x65, 0x72, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_flyteidl_plugins_sagemaker_hyperparameter_tuning_job_proto_rawDescOnce sync.Once
	file_flyteidl_plugins_sagemaker_hyperparameter_tuning_job_proto_rawDescData = file_flyteidl_plugins_sagemaker_hyperparameter_tuning_job_proto_rawDesc
)

func file_flyteidl_plugins_sagemaker_hyperparameter_tuning_job_proto_rawDescGZIP() []byte {
	file_flyteidl_plugins_sagemaker_hyperparameter_tuning_job_proto_rawDescOnce.Do(func() {
		file_flyteidl_plugins_sagemaker_hyperparameter_tuning_job_proto_rawDescData = protoimpl.X.CompressGZIP(file_flyteidl_plugins_sagemaker_hyperparameter_tuning_job_proto_rawDescData)
	})
	return file_flyteidl_plugins_sagemaker_hyperparameter_tuning_job_proto_rawDescData
}

var file_flyteidl_plugins_sagemaker_hyperparameter_tuning_job_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_flyteidl_plugins_sagemaker_hyperparameter_tuning_job_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_flyteidl_plugins_sagemaker_hyperparameter_tuning_job_proto_goTypes = []interface{}{
	(HyperparameterTuningObjectiveType_Value)(0), // 0: flyteidl.plugins.sagemaker.HyperparameterTuningObjectiveType.Value
	(HyperparameterTuningStrategy_Value)(0),      // 1: flyteidl.plugins.sagemaker.HyperparameterTuningStrategy.Value
	(TrainingJobEarlyStoppingType_Value)(0),      // 2: flyteidl.plugins.sagemaker.TrainingJobEarlyStoppingType.Value
	(*HyperparameterTuningJob)(nil),              // 3: flyteidl.plugins.sagemaker.HyperparameterTuningJob
	(*HyperparameterTuningObjectiveType)(nil),    // 4: flyteidl.plugins.sagemaker.HyperparameterTuningObjectiveType
	(*HyperparameterTuningObjective)(nil),        // 5: flyteidl.plugins.sagemaker.HyperparameterTuningObjective
	(*HyperparameterTuningStrategy)(nil),         // 6: flyteidl.plugins.sagemaker.HyperparameterTuningStrategy
	(*TrainingJobEarlyStoppingType)(nil),         // 7: flyteidl.plugins.sagemaker.TrainingJobEarlyStoppingType
	(*HyperparameterTuningJobConfig)(nil),        // 8: flyteidl.plugins.sagemaker.HyperparameterTuningJobConfig
	(*TrainingJob)(nil),                          // 9: flyteidl.plugins.sagemaker.TrainingJob
	(*ParameterRanges)(nil),                      // 10: flyteidl.plugins.sagemaker.ParameterRanges
}
var file_flyteidl_plugins_sagemaker_hyperparameter_tuning_job_proto_depIdxs = []int32{
	9,  // 0: flyteidl.plugins.sagemaker.HyperparameterTuningJob.training_job:type_name -> flyteidl.plugins.sagemaker.TrainingJob
	0,  // 1: flyteidl.plugins.sagemaker.HyperparameterTuningObjective.objective_type:type_name -> flyteidl.plugins.sagemaker.HyperparameterTuningObjectiveType.Value
	10, // 2: flyteidl.plugins.sagemaker.HyperparameterTuningJobConfig.hyperparameter_ranges:type_name -> flyteidl.plugins.sagemaker.ParameterRanges
	1,  // 3: flyteidl.plugins.sagemaker.HyperparameterTuningJobConfig.tuning_strategy:type_name -> flyteidl.plugins.sagemaker.HyperparameterTuningStrategy.Value
	5,  // 4: flyteidl.plugins.sagemaker.HyperparameterTuningJobConfig.tuning_objective:type_name -> flyteidl.plugins.sagemaker.HyperparameterTuningObjective
	2,  // 5: flyteidl.plugins.sagemaker.HyperparameterTuningJobConfig.training_job_early_stopping_type:type_name -> flyteidl.plugins.sagemaker.TrainingJobEarlyStoppingType.Value
	6,  // [6:6] is the sub-list for method output_type
	6,  // [6:6] is the sub-list for method input_type
	6,  // [6:6] is the sub-list for extension type_name
	6,  // [6:6] is the sub-list for extension extendee
	0,  // [0:6] is the sub-list for field type_name
}

func init() { file_flyteidl_plugins_sagemaker_hyperparameter_tuning_job_proto_init() }
func file_flyteidl_plugins_sagemaker_hyperparameter_tuning_job_proto_init() {
	if File_flyteidl_plugins_sagemaker_hyperparameter_tuning_job_proto != nil {
		return
	}
	file_flyteidl_plugins_sagemaker_parameter_ranges_proto_init()
	file_flyteidl_plugins_sagemaker_training_job_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_flyteidl_plugins_sagemaker_hyperparameter_tuning_job_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HyperparameterTuningJob); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_flyteidl_plugins_sagemaker_hyperparameter_tuning_job_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HyperparameterTuningObjectiveType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_flyteidl_plugins_sagemaker_hyperparameter_tuning_job_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HyperparameterTuningObjective); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_flyteidl_plugins_sagemaker_hyperparameter_tuning_job_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HyperparameterTuningStrategy); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_flyteidl_plugins_sagemaker_hyperparameter_tuning_job_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TrainingJobEarlyStoppingType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_flyteidl_plugins_sagemaker_hyperparameter_tuning_job_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HyperparameterTuningJobConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_flyteidl_plugins_sagemaker_hyperparameter_tuning_job_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_flyteidl_plugins_sagemaker_hyperparameter_tuning_job_proto_goTypes,
		DependencyIndexes: file_flyteidl_plugins_sagemaker_hyperparameter_tuning_job_proto_depIdxs,
		EnumInfos:         file_flyteidl_plugins_sagemaker_hyperparameter_tuning_job_proto_enumTypes,
		MessageInfos:      file_flyteidl_plugins_sagemaker_hyperparameter_tuning_job_proto_msgTypes,
	}.Build()
	File_flyteidl_plugins_sagemaker_hyperparameter_tuning_job_proto = out.File
	file_flyteidl_plugins_sagemaker_hyperparameter_tuning_job_proto_rawDesc = nil
	file_flyteidl_plugins_sagemaker_hyperparameter_tuning_job_proto_goTypes = nil
	file_flyteidl_plugins_sagemaker_hyperparameter_tuning_job_proto_depIdxs = nil
}
