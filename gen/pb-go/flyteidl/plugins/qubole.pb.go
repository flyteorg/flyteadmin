// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        (unknown)
// source: flyteidl/plugins/qubole.proto

package plugins

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Defines a query to execute on a hive cluster.
type HiveQuery struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Query      string `protobuf:"bytes,1,opt,name=query,proto3" json:"query,omitempty"`
	TimeoutSec uint32 `protobuf:"varint,2,opt,name=timeout_sec,json=timeoutSec,proto3" json:"timeout_sec,omitempty"`
	RetryCount uint32 `protobuf:"varint,3,opt,name=retryCount,proto3" json:"retryCount,omitempty"`
}

func (x *HiveQuery) Reset() {
	*x = HiveQuery{}
	if protoimpl.UnsafeEnabled {
		mi := &file_flyteidl_plugins_qubole_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HiveQuery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HiveQuery) ProtoMessage() {}

func (x *HiveQuery) ProtoReflect() protoreflect.Message {
	mi := &file_flyteidl_plugins_qubole_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HiveQuery.ProtoReflect.Descriptor instead.
func (*HiveQuery) Descriptor() ([]byte, []int) {
	return file_flyteidl_plugins_qubole_proto_rawDescGZIP(), []int{0}
}

func (x *HiveQuery) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

func (x *HiveQuery) GetTimeoutSec() uint32 {
	if x != nil {
		return x.TimeoutSec
	}
	return 0
}

func (x *HiveQuery) GetRetryCount() uint32 {
	if x != nil {
		return x.RetryCount
	}
	return 0
}

// Defines a collection of hive queries.
type HiveQueryCollection struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Queries []*HiveQuery `protobuf:"bytes,2,rep,name=queries,proto3" json:"queries,omitempty"`
}

func (x *HiveQueryCollection) Reset() {
	*x = HiveQueryCollection{}
	if protoimpl.UnsafeEnabled {
		mi := &file_flyteidl_plugins_qubole_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HiveQueryCollection) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HiveQueryCollection) ProtoMessage() {}

func (x *HiveQueryCollection) ProtoReflect() protoreflect.Message {
	mi := &file_flyteidl_plugins_qubole_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HiveQueryCollection.ProtoReflect.Descriptor instead.
func (*HiveQueryCollection) Descriptor() ([]byte, []int) {
	return file_flyteidl_plugins_qubole_proto_rawDescGZIP(), []int{1}
}

func (x *HiveQueryCollection) GetQueries() []*HiveQuery {
	if x != nil {
		return x.Queries
	}
	return nil
}

// This message works with the 'hive' task type in the SDK and is the object that will be in the 'custom' field
// of a hive task's TaskTemplate
type QuboleHiveJob struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClusterLabel string `protobuf:"bytes,1,opt,name=cluster_label,json=clusterLabel,proto3" json:"cluster_label,omitempty"`
	// Deprecated: Do not use.
	QueryCollection *HiveQueryCollection `protobuf:"bytes,2,opt,name=query_collection,json=queryCollection,proto3" json:"query_collection,omitempty"`
	Tags            []string             `protobuf:"bytes,3,rep,name=tags,proto3" json:"tags,omitempty"`
	Query           *HiveQuery           `protobuf:"bytes,4,opt,name=query,proto3" json:"query,omitempty"`
}

func (x *QuboleHiveJob) Reset() {
	*x = QuboleHiveJob{}
	if protoimpl.UnsafeEnabled {
		mi := &file_flyteidl_plugins_qubole_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QuboleHiveJob) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QuboleHiveJob) ProtoMessage() {}

func (x *QuboleHiveJob) ProtoReflect() protoreflect.Message {
	mi := &file_flyteidl_plugins_qubole_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QuboleHiveJob.ProtoReflect.Descriptor instead.
func (*QuboleHiveJob) Descriptor() ([]byte, []int) {
	return file_flyteidl_plugins_qubole_proto_rawDescGZIP(), []int{2}
}

func (x *QuboleHiveJob) GetClusterLabel() string {
	if x != nil {
		return x.ClusterLabel
	}
	return ""
}

// Deprecated: Do not use.
func (x *QuboleHiveJob) GetQueryCollection() *HiveQueryCollection {
	if x != nil {
		return x.QueryCollection
	}
	return nil
}

func (x *QuboleHiveJob) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *QuboleHiveJob) GetQuery() *HiveQuery {
	if x != nil {
		return x.Query
	}
	return nil
}

var File_flyteidl_plugins_qubole_proto protoreflect.FileDescriptor

var file_flyteidl_plugins_qubole_proto_rawDesc = []byte{
	0x0a, 0x1d, 0x66, 0x6c, 0x79, 0x74, 0x65, 0x69, 0x64, 0x6c, 0x2f, 0x70, 0x6c, 0x75, 0x67, 0x69,
	0x6e, 0x73, 0x2f, 0x71, 0x75, 0x62, 0x6f, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x10, 0x66, 0x6c, 0x79, 0x74, 0x65, 0x69, 0x64, 0x6c, 0x2e, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e,
	0x73, 0x22, 0x62, 0x0a, 0x09, 0x48, 0x69, 0x76, 0x65, 0x51, 0x75, 0x65, 0x72, 0x79, 0x12, 0x14,
	0x0a, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x71,
	0x75, 0x65, 0x72, 0x79, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x5f,
	0x73, 0x65, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x74, 0x69, 0x6d, 0x65, 0x6f,
	0x75, 0x74, 0x53, 0x65, 0x63, 0x12, 0x1e, 0x0a, 0x0a, 0x72, 0x65, 0x74, 0x72, 0x79, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x72, 0x65, 0x74, 0x72, 0x79,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x4c, 0x0a, 0x13, 0x48, 0x69, 0x76, 0x65, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x35, 0x0a, 0x07,
	0x71, 0x75, 0x65, 0x72, 0x69, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e,
	0x66, 0x6c, 0x79, 0x74, 0x65, 0x69, 0x64, 0x6c, 0x2e, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x73,
	0x2e, 0x48, 0x69, 0x76, 0x65, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x07, 0x71, 0x75, 0x65, 0x72,
	0x69, 0x65, 0x73, 0x22, 0xd1, 0x01, 0x0a, 0x0d, 0x51, 0x75, 0x62, 0x6f, 0x6c, 0x65, 0x48, 0x69,
	0x76, 0x65, 0x4a, 0x6f, 0x62, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72,
	0x5f, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x6c,
	0x75, 0x73, 0x74, 0x65, 0x72, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x12, 0x54, 0x0a, 0x10, 0x71, 0x75,
	0x65, 0x72, 0x79, 0x5f, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x66, 0x6c, 0x79, 0x74, 0x65, 0x69, 0x64, 0x6c, 0x2e,
	0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x73, 0x2e, 0x48, 0x69, 0x76, 0x65, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x02, 0x18, 0x01, 0x52,
	0x0f, 0x71, 0x75, 0x65, 0x72, 0x79, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x12, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04,
	0x74, 0x61, 0x67, 0x73, 0x12, 0x31, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x66, 0x6c, 0x79, 0x74, 0x65, 0x69, 0x64, 0x6c, 0x2e, 0x70,
	0x6c, 0x75, 0x67, 0x69, 0x6e, 0x73, 0x2e, 0x48, 0x69, 0x76, 0x65, 0x51, 0x75, 0x65, 0x72, 0x79,
	0x52, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x42, 0xbd, 0x01, 0x0a, 0x14, 0x63, 0x6f, 0x6d, 0x2e,
	0x66, 0x6c, 0x79, 0x74, 0x65, 0x69, 0x64, 0x6c, 0x2e, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x73,
	0x42, 0x0b, 0x51, 0x75, 0x62, 0x6f, 0x6c, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a,
	0x37, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x66, 0x6c, 0x79, 0x74,
	0x65, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x6c, 0x79, 0x74, 0x65, 0x69, 0x64, 0x6c, 0x2f, 0x67, 0x65,
	0x6e, 0x2f, 0x70, 0x62, 0x2d, 0x67, 0x6f, 0x2f, 0x66, 0x6c, 0x79, 0x74, 0x65, 0x69, 0x64, 0x6c,
	0x2f, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x73, 0xa2, 0x02, 0x03, 0x46, 0x50, 0x58, 0xaa, 0x02,
	0x10, 0x46, 0x6c, 0x79, 0x74, 0x65, 0x69, 0x64, 0x6c, 0x2e, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e,
	0x73, 0xca, 0x02, 0x10, 0x46, 0x6c, 0x79, 0x74, 0x65, 0x69, 0x64, 0x6c, 0x5c, 0x50, 0x6c, 0x75,
	0x67, 0x69, 0x6e, 0x73, 0xe2, 0x02, 0x1c, 0x46, 0x6c, 0x79, 0x74, 0x65, 0x69, 0x64, 0x6c, 0x5c,
	0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x73, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0xea, 0x02, 0x11, 0x46, 0x6c, 0x79, 0x74, 0x65, 0x69, 0x64, 0x6c, 0x3a, 0x3a,
	0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_flyteidl_plugins_qubole_proto_rawDescOnce sync.Once
	file_flyteidl_plugins_qubole_proto_rawDescData = file_flyteidl_plugins_qubole_proto_rawDesc
)

func file_flyteidl_plugins_qubole_proto_rawDescGZIP() []byte {
	file_flyteidl_plugins_qubole_proto_rawDescOnce.Do(func() {
		file_flyteidl_plugins_qubole_proto_rawDescData = protoimpl.X.CompressGZIP(file_flyteidl_plugins_qubole_proto_rawDescData)
	})
	return file_flyteidl_plugins_qubole_proto_rawDescData
}

var file_flyteidl_plugins_qubole_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_flyteidl_plugins_qubole_proto_goTypes = []interface{}{
	(*HiveQuery)(nil),           // 0: flyteidl.plugins.HiveQuery
	(*HiveQueryCollection)(nil), // 1: flyteidl.plugins.HiveQueryCollection
	(*QuboleHiveJob)(nil),       // 2: flyteidl.plugins.QuboleHiveJob
}
var file_flyteidl_plugins_qubole_proto_depIdxs = []int32{
	0, // 0: flyteidl.plugins.HiveQueryCollection.queries:type_name -> flyteidl.plugins.HiveQuery
	1, // 1: flyteidl.plugins.QuboleHiveJob.query_collection:type_name -> flyteidl.plugins.HiveQueryCollection
	0, // 2: flyteidl.plugins.QuboleHiveJob.query:type_name -> flyteidl.plugins.HiveQuery
	3, // [3:3] is the sub-list for method output_type
	3, // [3:3] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_flyteidl_plugins_qubole_proto_init() }
func file_flyteidl_plugins_qubole_proto_init() {
	if File_flyteidl_plugins_qubole_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_flyteidl_plugins_qubole_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HiveQuery); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_flyteidl_plugins_qubole_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HiveQueryCollection); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_flyteidl_plugins_qubole_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QuboleHiveJob); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_flyteidl_plugins_qubole_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_flyteidl_plugins_qubole_proto_goTypes,
		DependencyIndexes: file_flyteidl_plugins_qubole_proto_depIdxs,
		MessageInfos:      file_flyteidl_plugins_qubole_proto_msgTypes,
	}.Build()
	File_flyteidl_plugins_qubole_proto = out.File
	file_flyteidl_plugins_qubole_proto_rawDesc = nil
	file_flyteidl_plugins_qubole_proto_goTypes = nil
	file_flyteidl_plugins_qubole_proto_depIdxs = nil
}
