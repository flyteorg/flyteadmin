// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        (unknown)
// source: flyteidl/admin/workflow_attributes.proto

package admin

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Defines a set of custom matching attributes which defines resource defaults for a project, domain and workflow.
// For more info on matchable attributes, see :ref:`ref_flyteidl.admin.MatchableAttributesConfiguration`
type WorkflowAttributes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Unique project id for which this set of attributes will be applied.
	Project string `protobuf:"bytes,1,opt,name=project,proto3" json:"project,omitempty"`
	// Unique domain id for which this set of attributes will be applied.
	Domain string `protobuf:"bytes,2,opt,name=domain,proto3" json:"domain,omitempty"`
	// Workflow name for which this set of attributes will be applied.
	Workflow           string              `protobuf:"bytes,3,opt,name=workflow,proto3" json:"workflow,omitempty"`
	MatchingAttributes *MatchingAttributes `protobuf:"bytes,4,opt,name=matching_attributes,json=matchingAttributes,proto3" json:"matching_attributes,omitempty"`
}

func (x *WorkflowAttributes) Reset() {
	*x = WorkflowAttributes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_flyteidl_admin_workflow_attributes_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WorkflowAttributes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkflowAttributes) ProtoMessage() {}

func (x *WorkflowAttributes) ProtoReflect() protoreflect.Message {
	mi := &file_flyteidl_admin_workflow_attributes_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkflowAttributes.ProtoReflect.Descriptor instead.
func (*WorkflowAttributes) Descriptor() ([]byte, []int) {
	return file_flyteidl_admin_workflow_attributes_proto_rawDescGZIP(), []int{0}
}

func (x *WorkflowAttributes) GetProject() string {
	if x != nil {
		return x.Project
	}
	return ""
}

func (x *WorkflowAttributes) GetDomain() string {
	if x != nil {
		return x.Domain
	}
	return ""
}

func (x *WorkflowAttributes) GetWorkflow() string {
	if x != nil {
		return x.Workflow
	}
	return ""
}

func (x *WorkflowAttributes) GetMatchingAttributes() *MatchingAttributes {
	if x != nil {
		return x.MatchingAttributes
	}
	return nil
}

// Sets custom attributes for a project, domain and workflow combination.
// For more info on matchable attributes, see :ref:`ref_flyteidl.admin.MatchableAttributesConfiguration`
type WorkflowAttributesUpdateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Attributes *WorkflowAttributes `protobuf:"bytes,1,opt,name=attributes,proto3" json:"attributes,omitempty"`
}

func (x *WorkflowAttributesUpdateRequest) Reset() {
	*x = WorkflowAttributesUpdateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_flyteidl_admin_workflow_attributes_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WorkflowAttributesUpdateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkflowAttributesUpdateRequest) ProtoMessage() {}

func (x *WorkflowAttributesUpdateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_flyteidl_admin_workflow_attributes_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkflowAttributesUpdateRequest.ProtoReflect.Descriptor instead.
func (*WorkflowAttributesUpdateRequest) Descriptor() ([]byte, []int) {
	return file_flyteidl_admin_workflow_attributes_proto_rawDescGZIP(), []int{1}
}

func (x *WorkflowAttributesUpdateRequest) GetAttributes() *WorkflowAttributes {
	if x != nil {
		return x.Attributes
	}
	return nil
}

// Purposefully empty, may be populated in the future.
type WorkflowAttributesUpdateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *WorkflowAttributesUpdateResponse) Reset() {
	*x = WorkflowAttributesUpdateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_flyteidl_admin_workflow_attributes_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WorkflowAttributesUpdateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkflowAttributesUpdateResponse) ProtoMessage() {}

func (x *WorkflowAttributesUpdateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_flyteidl_admin_workflow_attributes_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkflowAttributesUpdateResponse.ProtoReflect.Descriptor instead.
func (*WorkflowAttributesUpdateResponse) Descriptor() ([]byte, []int) {
	return file_flyteidl_admin_workflow_attributes_proto_rawDescGZIP(), []int{2}
}

// Request to get an individual workflow attribute override.
// For more info on matchable attributes, see :ref:`ref_flyteidl.admin.MatchableAttributesConfiguration`
type WorkflowAttributesGetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Unique project id which this set of attributes references.
	// +required
	Project string `protobuf:"bytes,1,opt,name=project,proto3" json:"project,omitempty"`
	// Unique domain id which this set of attributes references.
	// +required
	Domain string `protobuf:"bytes,2,opt,name=domain,proto3" json:"domain,omitempty"`
	// Workflow name which this set of attributes references.
	// +required
	Workflow string `protobuf:"bytes,3,opt,name=workflow,proto3" json:"workflow,omitempty"`
	// Which type of matchable attributes to return.
	// +required
	ResourceType MatchableResource `protobuf:"varint,4,opt,name=resource_type,json=resourceType,proto3,enum=flyteidl.admin.MatchableResource" json:"resource_type,omitempty"`
}

func (x *WorkflowAttributesGetRequest) Reset() {
	*x = WorkflowAttributesGetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_flyteidl_admin_workflow_attributes_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WorkflowAttributesGetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkflowAttributesGetRequest) ProtoMessage() {}

func (x *WorkflowAttributesGetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_flyteidl_admin_workflow_attributes_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkflowAttributesGetRequest.ProtoReflect.Descriptor instead.
func (*WorkflowAttributesGetRequest) Descriptor() ([]byte, []int) {
	return file_flyteidl_admin_workflow_attributes_proto_rawDescGZIP(), []int{3}
}

func (x *WorkflowAttributesGetRequest) GetProject() string {
	if x != nil {
		return x.Project
	}
	return ""
}

func (x *WorkflowAttributesGetRequest) GetDomain() string {
	if x != nil {
		return x.Domain
	}
	return ""
}

func (x *WorkflowAttributesGetRequest) GetWorkflow() string {
	if x != nil {
		return x.Workflow
	}
	return ""
}

func (x *WorkflowAttributesGetRequest) GetResourceType() MatchableResource {
	if x != nil {
		return x.ResourceType
	}
	return MatchableResource_TASK_RESOURCE
}

// Response to get an individual workflow attribute override.
type WorkflowAttributesGetResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Attributes *WorkflowAttributes `protobuf:"bytes,1,opt,name=attributes,proto3" json:"attributes,omitempty"`
}

func (x *WorkflowAttributesGetResponse) Reset() {
	*x = WorkflowAttributesGetResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_flyteidl_admin_workflow_attributes_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WorkflowAttributesGetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkflowAttributesGetResponse) ProtoMessage() {}

func (x *WorkflowAttributesGetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_flyteidl_admin_workflow_attributes_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkflowAttributesGetResponse.ProtoReflect.Descriptor instead.
func (*WorkflowAttributesGetResponse) Descriptor() ([]byte, []int) {
	return file_flyteidl_admin_workflow_attributes_proto_rawDescGZIP(), []int{4}
}

func (x *WorkflowAttributesGetResponse) GetAttributes() *WorkflowAttributes {
	if x != nil {
		return x.Attributes
	}
	return nil
}

// Request to delete a set matchable workflow attribute override.
// For more info on matchable attributes, see :ref:`ref_flyteidl.admin.MatchableAttributesConfiguration`
type WorkflowAttributesDeleteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Unique project id which this set of attributes references.
	// +required
	Project string `protobuf:"bytes,1,opt,name=project,proto3" json:"project,omitempty"`
	// Unique domain id which this set of attributes references.
	// +required
	Domain string `protobuf:"bytes,2,opt,name=domain,proto3" json:"domain,omitempty"`
	// Workflow name which this set of attributes references.
	// +required
	Workflow string `protobuf:"bytes,3,opt,name=workflow,proto3" json:"workflow,omitempty"`
	// Which type of matchable attributes to delete.
	// +required
	ResourceType MatchableResource `protobuf:"varint,4,opt,name=resource_type,json=resourceType,proto3,enum=flyteidl.admin.MatchableResource" json:"resource_type,omitempty"`
}

func (x *WorkflowAttributesDeleteRequest) Reset() {
	*x = WorkflowAttributesDeleteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_flyteidl_admin_workflow_attributes_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WorkflowAttributesDeleteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkflowAttributesDeleteRequest) ProtoMessage() {}

func (x *WorkflowAttributesDeleteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_flyteidl_admin_workflow_attributes_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkflowAttributesDeleteRequest.ProtoReflect.Descriptor instead.
func (*WorkflowAttributesDeleteRequest) Descriptor() ([]byte, []int) {
	return file_flyteidl_admin_workflow_attributes_proto_rawDescGZIP(), []int{5}
}

func (x *WorkflowAttributesDeleteRequest) GetProject() string {
	if x != nil {
		return x.Project
	}
	return ""
}

func (x *WorkflowAttributesDeleteRequest) GetDomain() string {
	if x != nil {
		return x.Domain
	}
	return ""
}

func (x *WorkflowAttributesDeleteRequest) GetWorkflow() string {
	if x != nil {
		return x.Workflow
	}
	return ""
}

func (x *WorkflowAttributesDeleteRequest) GetResourceType() MatchableResource {
	if x != nil {
		return x.ResourceType
	}
	return MatchableResource_TASK_RESOURCE
}

// Purposefully empty, may be populated in the future.
type WorkflowAttributesDeleteResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *WorkflowAttributesDeleteResponse) Reset() {
	*x = WorkflowAttributesDeleteResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_flyteidl_admin_workflow_attributes_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WorkflowAttributesDeleteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkflowAttributesDeleteResponse) ProtoMessage() {}

func (x *WorkflowAttributesDeleteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_flyteidl_admin_workflow_attributes_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkflowAttributesDeleteResponse.ProtoReflect.Descriptor instead.
func (*WorkflowAttributesDeleteResponse) Descriptor() ([]byte, []int) {
	return file_flyteidl_admin_workflow_attributes_proto_rawDescGZIP(), []int{6}
}

var File_flyteidl_admin_workflow_attributes_proto protoreflect.FileDescriptor

var file_flyteidl_admin_workflow_attributes_proto_rawDesc = []byte{
	0x0a, 0x28, 0x66, 0x6c, 0x79, 0x74, 0x65, 0x69, 0x64, 0x6c, 0x2f, 0x61, 0x64, 0x6d, 0x69, 0x6e,
	0x2f, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x5f, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62,
	0x75, 0x74, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0e, 0x66, 0x6c, 0x79, 0x74,
	0x65, 0x69, 0x64, 0x6c, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x1a, 0x27, 0x66, 0x6c, 0x79, 0x74,
	0x65, 0x69, 0x64, 0x6c, 0x2f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2f, 0x6d, 0x61, 0x74, 0x63, 0x68,
	0x61, 0x62, 0x6c, 0x65, 0x5f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0xb7, 0x01, 0x0a, 0x12, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77,
	0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x12, 0x1a, 0x0a, 0x08,
	0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x12, 0x53, 0x0a, 0x13, 0x6d, 0x61, 0x74, 0x63,
	0x68, 0x69, 0x6e, 0x67, 0x5f, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x66, 0x6c, 0x79, 0x74, 0x65, 0x69, 0x64, 0x6c,
	0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x69, 0x6e, 0x67, 0x41,
	0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x52, 0x12, 0x6d, 0x61, 0x74, 0x63, 0x68,
	0x69, 0x6e, 0x67, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x22, 0x65, 0x0a,
	0x1f, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75,
	0x74, 0x65, 0x73, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x42, 0x0a, 0x0a, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x66, 0x6c, 0x79, 0x74, 0x65, 0x69, 0x64, 0x6c, 0x2e,
	0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x41, 0x74,
	0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x52, 0x0a, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62,
	0x75, 0x74, 0x65, 0x73, 0x22, 0x22, 0x0a, 0x20, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77,
	0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xb4, 0x01, 0x0a, 0x1c, 0x57, 0x6f, 0x72,
	0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x47,
	0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x77,
	0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x77,
	0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x12, 0x46, 0x0a, 0x0d, 0x72, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x21,
	0x2e, 0x66, 0x6c, 0x79, 0x74, 0x65, 0x69, 0x64, 0x6c, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e,
	0x4d, 0x61, 0x74, 0x63, 0x68, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x52, 0x0c, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x22,
	0x63, 0x0a, 0x1d, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x41, 0x74, 0x74, 0x72, 0x69,
	0x62, 0x75, 0x74, 0x65, 0x73, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x42, 0x0a, 0x0a, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x66, 0x6c, 0x79, 0x74, 0x65, 0x69, 0x64, 0x6c, 0x2e,
	0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x41, 0x74,
	0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x52, 0x0a, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62,
	0x75, 0x74, 0x65, 0x73, 0x22, 0xb7, 0x01, 0x0a, 0x1f, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f,
	0x77, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x77, 0x6f,
	0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x77, 0x6f,
	0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x12, 0x46, 0x0a, 0x0d, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x21, 0x2e,
	0x66, 0x6c, 0x79, 0x74, 0x65, 0x69, 0x64, 0x6c, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x4d,
	0x61, 0x74, 0x63, 0x68, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x52, 0x0c, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x22, 0x22,
	0x0a, 0x20, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62,
	0x75, 0x74, 0x65, 0x73, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x42, 0xbd, 0x01, 0x0a, 0x12, 0x63, 0x6f, 0x6d, 0x2e, 0x66, 0x6c, 0x79, 0x74, 0x65,
	0x69, 0x64, 0x6c, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x42, 0x17, 0x57, 0x6f, 0x72, 0x6b, 0x66,
	0x6c, 0x6f, 0x77, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x50, 0x01, 0x5a, 0x35, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2f, 0x66, 0x6c, 0x79, 0x74, 0x65, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x6c, 0x79, 0x74, 0x65, 0x69,
	0x64, 0x6c, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x70, 0x62, 0x2d, 0x67, 0x6f, 0x2f, 0x66, 0x6c, 0x79,
	0x74, 0x65, 0x69, 0x64, 0x6c, 0x2f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0xa2, 0x02, 0x03, 0x46, 0x41,
	0x58, 0xaa, 0x02, 0x0e, 0x46, 0x6c, 0x79, 0x74, 0x65, 0x69, 0x64, 0x6c, 0x2e, 0x41, 0x64, 0x6d,
	0x69, 0x6e, 0xca, 0x02, 0x0e, 0x46, 0x6c, 0x79, 0x74, 0x65, 0x69, 0x64, 0x6c, 0x5c, 0x41, 0x64,
	0x6d, 0x69, 0x6e, 0xe2, 0x02, 0x1a, 0x46, 0x6c, 0x79, 0x74, 0x65, 0x69, 0x64, 0x6c, 0x5c, 0x41,
	0x64, 0x6d, 0x69, 0x6e, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0xea, 0x02, 0x0f, 0x46, 0x6c, 0x79, 0x74, 0x65, 0x69, 0x64, 0x6c, 0x3a, 0x3a, 0x41, 0x64, 0x6d,
	0x69, 0x6e, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_flyteidl_admin_workflow_attributes_proto_rawDescOnce sync.Once
	file_flyteidl_admin_workflow_attributes_proto_rawDescData = file_flyteidl_admin_workflow_attributes_proto_rawDesc
)

func file_flyteidl_admin_workflow_attributes_proto_rawDescGZIP() []byte {
	file_flyteidl_admin_workflow_attributes_proto_rawDescOnce.Do(func() {
		file_flyteidl_admin_workflow_attributes_proto_rawDescData = protoimpl.X.CompressGZIP(file_flyteidl_admin_workflow_attributes_proto_rawDescData)
	})
	return file_flyteidl_admin_workflow_attributes_proto_rawDescData
}

var file_flyteidl_admin_workflow_attributes_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_flyteidl_admin_workflow_attributes_proto_goTypes = []interface{}{
	(*WorkflowAttributes)(nil),               // 0: flyteidl.admin.WorkflowAttributes
	(*WorkflowAttributesUpdateRequest)(nil),  // 1: flyteidl.admin.WorkflowAttributesUpdateRequest
	(*WorkflowAttributesUpdateResponse)(nil), // 2: flyteidl.admin.WorkflowAttributesUpdateResponse
	(*WorkflowAttributesGetRequest)(nil),     // 3: flyteidl.admin.WorkflowAttributesGetRequest
	(*WorkflowAttributesGetResponse)(nil),    // 4: flyteidl.admin.WorkflowAttributesGetResponse
	(*WorkflowAttributesDeleteRequest)(nil),  // 5: flyteidl.admin.WorkflowAttributesDeleteRequest
	(*WorkflowAttributesDeleteResponse)(nil), // 6: flyteidl.admin.WorkflowAttributesDeleteResponse
	(*MatchingAttributes)(nil),               // 7: flyteidl.admin.MatchingAttributes
	(MatchableResource)(0),                   // 8: flyteidl.admin.MatchableResource
}
var file_flyteidl_admin_workflow_attributes_proto_depIdxs = []int32{
	7, // 0: flyteidl.admin.WorkflowAttributes.matching_attributes:type_name -> flyteidl.admin.MatchingAttributes
	0, // 1: flyteidl.admin.WorkflowAttributesUpdateRequest.attributes:type_name -> flyteidl.admin.WorkflowAttributes
	8, // 2: flyteidl.admin.WorkflowAttributesGetRequest.resource_type:type_name -> flyteidl.admin.MatchableResource
	0, // 3: flyteidl.admin.WorkflowAttributesGetResponse.attributes:type_name -> flyteidl.admin.WorkflowAttributes
	8, // 4: flyteidl.admin.WorkflowAttributesDeleteRequest.resource_type:type_name -> flyteidl.admin.MatchableResource
	5, // [5:5] is the sub-list for method output_type
	5, // [5:5] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_flyteidl_admin_workflow_attributes_proto_init() }
func file_flyteidl_admin_workflow_attributes_proto_init() {
	if File_flyteidl_admin_workflow_attributes_proto != nil {
		return
	}
	file_flyteidl_admin_matchable_resource_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_flyteidl_admin_workflow_attributes_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WorkflowAttributes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_flyteidl_admin_workflow_attributes_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WorkflowAttributesUpdateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_flyteidl_admin_workflow_attributes_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WorkflowAttributesUpdateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_flyteidl_admin_workflow_attributes_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WorkflowAttributesGetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_flyteidl_admin_workflow_attributes_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WorkflowAttributesGetResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_flyteidl_admin_workflow_attributes_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WorkflowAttributesDeleteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_flyteidl_admin_workflow_attributes_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WorkflowAttributesDeleteResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_flyteidl_admin_workflow_attributes_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_flyteidl_admin_workflow_attributes_proto_goTypes,
		DependencyIndexes: file_flyteidl_admin_workflow_attributes_proto_depIdxs,
		MessageInfos:      file_flyteidl_admin_workflow_attributes_proto_msgTypes,
	}.Build()
	File_flyteidl_admin_workflow_attributes_proto = out.File
	file_flyteidl_admin_workflow_attributes_proto_rawDesc = nil
	file_flyteidl_admin_workflow_attributes_proto_goTypes = nil
	file_flyteidl_admin_workflow_attributes_proto_depIdxs = nil
}
